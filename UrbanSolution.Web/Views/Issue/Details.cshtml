@model UrbanSolution.Services.Models.UrbanIssueDetailsServiceModel
@using System.Globalization
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    ViewData["Title"] = $"Details for {Model.Name} issue";
    var apiKey = Configuration.GetSection("Google:MapsApiKey").Value;  //TODO remove after partial/component
    var lat = Model.Latitude.ToString().Replace(",", ".");
    var lgt = Model.Longitude.ToString().Replace(",", ".");
}

<div row class="text-info">
    <h3 class="text-center">@this.ViewData["Title"]</h3>
    <hr />
</div>

<div class="row">
    <div class="form-group col-xs-6">
        <div class="row">
            <h3>Published by <em>@Model.Publisher</em> on <em>@Model.PublishedOn.ToShortDateString()</em></h3>
            <h3>Description: @Model.Description</h3>
            <h3>@Model.AddressStreet street @Model.StreetNumber</h3>
            <h3>Type: @Model.Type</h3>
            <h3>Region: @Model.Region</h3>
            <h4>@(Model.IsApproved != true ? "Not approved yet!" : "")</h4>
            @if (Model.HasResolved)
            {
                @:(View Resolved:) <a></a> @*TODO/ make a link to resolved*@
            }
            @if (this.User.IsInRole(WebConstants.ManagerRole))
            {
                <a class="btn btn-primary" asp-area="Manager" asp-controller="Issues" asp-action="Approve" asp-route-id="@Model.Id">Approve</a>
                <a class="btn btn-primary" asp-area="Manager" asp-controller="Issues" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                <a class="btn btn-danger" asp-area="Manager" asp-controller="Issues" asp-action="Delete" asp-route-id=" @Model.Id">Delete</a>
            }
        </div>
    </div>
    <div class="form-group col-xs-6">
        <div class="row">                                                                                    
            <div id="map" style="height: 400px; width: 600px;">
                @*TODO/ make editor template for map*@
            </div>
        </div>
    </div>
</div>


@section Scripts {
<script>
    var map;
    function initMap() {

        var myLatLng = { lat: @(lat) , lng: @(lgt) };

        var mapOptions = {
            zoom: 17,
            center: myLatLng
        }

        map = new google.maps.Map(document.getElementById('map'), mapOptions);

        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map,
            draggable: false,
            title: "Here"
        });

        var contentString = '<div id="content">'+
            '<div id="siteNotice">'+
            '</div>'+
            '<h1 id="firstHeading" class="firstHeading">Uluru</h1>'+
            '<div id="bodyContent">'+
            '<p><b>Uluru</b>, also referred to as <b>Ayers Rock</b>, is a large ' +
            'sandstone rock formation in the southern part of the '+
            'Northern Territory, central Australia. It lies 335&#160;km (208&#160;mi) '+
            'south west of the nearest large town, Alice Springs; 450&#160;km '+
            '(280&#160;mi) by road.'+
            'Heritage Site.</p>' +
            '</div>'+
            '</div>';


        var infoWindow = new google.maps.InfoWindow({
            content: contentString
        });

        marker.addListener('mouseover',
            function() {
                infoWindow.open(map, marker);
            });

    }
</script>

    <script src="https://maps.googleapis.com/maps/api/js?key=@(apiKey)&callback=initMap"
            async defer>
    </script>
}