@using UrbanSolution.Web.Infrastructure.Extensions
@model UrbanIssueDetailsServiceModel

@inject IConfiguration Configuration
@{
    ViewData["Title"] = $"Details for {Model.Title}";
    var apiKey = Configuration.GetSection("Google:MapsApiKey").Value;    //TODO: remove after partial/component
}

<div row class="text-info">
    <h3 class="text-center">@this.ViewData["Title"]</h3>
    <hr />
</div>

<div class="row">
    <div class="form-group col-xs-6">
        <div class="row">
            <h3>Published by <em>@Model.Publisher</em> on <em>@Model.PublishedOn.ToShortDateString()</em></h3>
            <h3>@Model.Description</h3>
            <h3>@Model.Address</h3>
            <h3>Type: @Model.Type.ToFriendlyName()</h3>
            <h3>Region: @Model.Region</h3>

            @if(Model.IsApproved && !Model.HasResolved)
            {
                <a class="btn btn-primary" asp-area="Manager" asp-controller="Resolved" asp-action="Upload" asp-route-id="@Model.Id">
                    Upload Resolved
                </a>
            }
            @if (Model.HasResolved)
            {
                 <a class="btn btn-primary" asp-area="" asp-controller="Resolved" asp-action="Details" asp-route-id="@Model.ResolvedId">View Resolved</a> 
            }


            @if (this.User.IsInRole(WebConstants.ManagerRole))
            {
                if (!Model.IsApproved)
                {
                    <a class="btn btn-primary" asp-area="Manager" asp-controller="UrbanIssue" asp-action="Approve" asp-route-id="@Model.Id">Approve</a>
                }

                <a class="btn btn-primary"  asp-area="Manager" asp-controller="UrbanIssue" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                <a class="btn btn-danger"  asp-area="Manager" asp-controller="UrbanIssue" asp-action="Delete" asp-route-id=" @Model.Id">Delete</a>
            }
        </div>
    </div>
    <div class="form-group col-xs-6">
        <div class="row">
            <div id="map" style="height: 400px; width: 600px;">
                @*TODO/ make editor template for map*@
            </div>
        </div>
    </div>
</div>


@section Scripts {
  
    <script>
        var map;
        function initMap() {
            var myLatLng = { lat: @(Model.Latitude), lng: @(Model.Longitude) };
            var mapOptions = { zoom: 17, center: myLatLng }
            map = new google.maps.Map(document.getElementById('map'), mapOptions);
            var marker = new google.maps.Marker({ position: myLatLng, map: map });
        }
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=@(apiKey)&callback=initMap"
            async defer>
    </script>
}